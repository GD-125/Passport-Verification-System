INSTALLATION & SETUP INSTRUCTIONS

STEP 1: DATABASE SETUP
----------------------
1. Install PostgreSQL (if not installed)
2. Open PostgreSQL command line or pgAdmin
3. Run the schema.sql file:
   psql -U postgres -f database/schema.sql

STEP 2: BACKEND SETUP
---------------------
1. Navigate to backend folder:
   cd backend

2. Install dependencies:
   npm install

3. Create .env file with your database credentials:
   PORT=5000
   DB_HOST=localhost
   DB_PORT=5432
   DB_NAME=passport_verification_db
   DB_USER=postgres
   DB_PASSWORD=your_password
   JWT_SECRET=your_secret_key
   NODE_ENV=development

JWT SECRET KEY
node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"

4. Start the backend server:
   npm start
   (or for development: npm run dev)

STEP 3: FRONTEND SETUP
----------------------
1. Navigate to frontend folder:
   cd frontend

2. Install dependencies:
   npm install

3. Create .env file:
   REACT_APP_API_URL=http://localhost:5000/api

4. Start the React application:
   npm start

5. Open browser at http://localhost:3000

STEP 4: LOGIN CREDENTIALS
--------------------------
Use these sample credentials to login:

Admin:
- Username: admin_user
- Password: password123

Token Officer:
- Username: token_officer1
- Password: password123

Photo Validator:
- Username: photo_officer1
- Password: password123

Verification Officer:
- Username: verify_officer1
- Password: password123

Processing Officer:
- Username: process_officer1
- Password: password123

Approval Officer:
- Username: approval_officer1
- Password: password123

User (Applicant):
- Username: rajesh_kumar
- Password: password123

STEP 5: FEATURES TO TEST
------------------------
1. User Login - Submit applications, upload documents
2. Token Officer - Generate tokens for applications
3. Photo Validator - Validate photos and signatures
4. Verification Officer - Verify documents
5. Processing Officer - Police verification
6. Approval Officer - Final approval
7. Admin - Access all modules and view reports

STEP 6: API ENDPOINTS
---------------------
POST   /api/auth/register - Register new user
POST   /api/auth/login - Login
GET    /api/applications - Get all applications
POST   /api/applications - Create application
GET    /api/applications/:id - Get specific application
PUT    /api/applications/:id - Update application
POST   /api/tokens - Generate token
GET    /api/tokens - Get all tokens

DATABASE FEATURES
-----------------
✅ 10 Sample user entries with different roles
✅ 10 Sample passport applications
✅ Document records with verification status
✅ Token assignments
✅ Photo/Signature validations
✅ Verification records
✅ Processing records with police verification
✅ Approval logs
✅ Complete audit trail
✅ Automatic timestamp updates
✅ Database views for reporting
✅ Referential integrity constraints

SECURITY FEATURES
-----------------
✅ Role-based access control (RBAC)
✅ JWT authentication
✅ Password hashing (bcrypt)
✅ Audit logging for all actions
✅ Session management
✅ SQL injection prevention (parameterized queries)

ADDITIONAL FEATURES
-------------------
✅ File upload support (documents, photos, signatures)
✅ Real-time status tracking
✅ Multi-stage approval workflow
✅ Reference verification
✅ Police verification integration
✅ Comprehensive reporting
✅ Dashboard statistics
✅ User management

Note: Make sure PostgreSQL is running before starting the backend.
Both frontend and backend should run simultaneously.